import pandas as pd
from sklearn.cluster import KMeans
import streamlit as st
import matplotlib.pyplot as plt
import seaborn as sns

def run():
    st.title("üë• Segmenta√ß√£o de Clientes")
    
    # Carregando os dados
    vendas = pd.read_csv('data/VENDAS.csv', delimiter=';')
    clientes = pd.read_csv('data/CLIENTES.csv', delimiter=';')

    # Convertendo o valor das vendas
    vendas['VALOR_VENDA'] = vendas['VALOR_VENDA'].str.replace('.', '').str.replace(',', '.').astype(float)

    # Agrupando vendas por cliente
    total_gasto = vendas.groupby('ID_CLIENTE')['VALOR_VENDA'].sum().reset_index()
    total_gasto.columns = ['ID_CLIENTE', 'total_gasto']

    # Juntando dados de clientes com o total gasto
    clientes_completo = clientes.merge(total_gasto, on='ID_CLIENTE', how='left').fillna(0)

    # Exibindo os dados
    st.write(clientes_completo)

    # Segmenta√ß√£o com K-Means
    kmeans = KMeans(n_clusters=3, random_state=42)
    clientes_completo['cluster'] = kmeans.fit_predict(clientes_completo[['total_gasto']])

    # Plotando os clusters
    plt.figure(figsize=(10, 6))
    sns.scatterplot(data=clientes_completo, x='ID_CLIENTE', y='total_gasto', hue='cluster', palette=['yellow', 'purple', 'green'])
    plt.title('Segmenta√ß√£o de Clientes')
    plt.xlabel('ID Cliente')
    plt.ylabel('Total Gasto (R$)')
    st.pyplot(plt)

    # An√°lise abaixo do gr√°fico
    st.markdown(
        """
        <div style='background-color: #0000FF; padding: 15px; border-radius: 8px; margin-top: 15px; margin-bottom: 10px;'>
            <h4>üîç An√°lise da Segmenta√ß√£o de Clientes:</h4>
            <p><strong>Grupo Amarelo:</strong> Este grupo √© o que apresenta o maior gasto m√©dio, pr√≥ximo de R$ 20.000. Isso sugere que os clientes deste segmento s√£o altamente engajados e provavelmente respondem bem a campanhas de marketing e promo√ß√µes.</p>
            <p><strong>Grupo Roxo:</strong> O grupo roxo est√° na m√©dia, com um gasto m√©dio de R$ 5.000. Isso indica um potencial consider√°vel para o aumento de engajamento e fideliza√ß√£o. Estrat√©gias personalizadas podem ser eficazes para elevar o gasto desse grupo.</p>
            <p><strong>Grupo Verde:</strong> Este grupo apresenta o menor gasto m√©dio, abaixo de R$ 1.000. √â fundamental identificar os motivos por tr√°s desse comportamento e explorar maneiras de incentivar esse segmento a aumentar seu investimento.</p>
        </div>
        """, unsafe_allow_html=True
    )

    # Recomenda√ß√µes
    st.markdown(
        """
        <div style='background-color: #e2f0d9; padding: 15px; border-radius: 8px; margin-top: 15px;'>
            <h4 style='color: #155724;'>Recomenda√ß√µes Estrat√©gicas:</h4>
            <ul style='list-style-type: none; padding: 0;'>
                <li style='color: #4CAF50;'><strong>An√°lise de Produtos:</strong> Avaliar quais produtos s√£o mais vendidos para cada grupo de clientes.</li>
                <li style='color: #2196F3;'><strong>Campanhas Personalizadas:</strong> Desenvolver campanhas de marketing espec√≠ficas para cada grupo, levando em considera√ß√£o suas prefer√™ncias e comportamento de compra.</li>
                <li style='color: #FF9800;'><strong>Estrat√©gia de Distribui√ß√£o:</strong> Planejar a distribui√ß√£o de produtos considerando a localiza√ß√£o dos clientes, otimizando assim o alcance das campanhas.</li>
                <li style='color: #F44336;'><strong>Fideliza√ß√£o de Clientes:</strong> Implementar programas de fidelidade para incentivar a repeti√ß√£o de compras entre os clientes de maior gasto.</li>
                <li style='color: #9C27B0;'><strong>Feedback dos Clientes:</strong> Coletar feedback regularmente para entender melhor as necessidades e desejos dos diferentes grupos de clientes.</li>
                <li style='color: #3F51B5;'><strong>An√°lise Cont√≠nua:</strong> Monitorar o desempenho das vendas e a efic√°cia das campanhas para ajustar estrat√©gias conforme necess√°rio.</li>
            </ul>
        </div>
        """, unsafe_allow_html=True
    )

# Chamar a fun√ß√£o run para executar o app
if __name__ == "__main__":
    run()
